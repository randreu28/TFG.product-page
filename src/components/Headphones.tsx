/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cushion: THREE.Mesh;
    Ear_Cup: THREE.Mesh;
    Cylinder025: THREE.Mesh;
    Cylinder025_1: THREE.Mesh;
    ["Mid-"]: THREE.Mesh;
    Seprator: THREE.Mesh;
    Seprator001: THREE.Mesh;
  };
  materials: {
    Cushion: THREE.MeshStandardMaterial;
    ["Black-1"]: THREE.MeshStandardMaterial;
    GlowBlue: THREE.MeshStandardMaterial;
    ["Black-2"]: THREE.MeshStandardMaterial;
    Connector: THREE.MeshStandardMaterial;
  };
};

export function Headphones(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/headphones.gltf"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cushion.geometry} material={materials.Cushion} />
      <mesh geometry={nodes.Ear_Cup.geometry} material={materials["Black-1"]} />
      <mesh
        geometry={nodes.Cylinder025.geometry}
        material={materials["Black-1"]}
      />
      <mesh
        geometry={nodes.Cylinder025_1.geometry}
        material={materials.GlowBlue}
      />
      <mesh geometry={nodes["Mid-"].geometry} material={materials["Black-2"]} />
      <mesh geometry={nodes.Seprator.geometry} material={materials.Connector} />
      <mesh
        geometry={nodes.Seprator001.geometry}
        material={materials["Black-1"]}
      />
    </group>
  );
}

useGLTF.preload("/headphones.gltf");
