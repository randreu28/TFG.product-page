/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Body_1: THREE.Mesh;
    Body_2: THREE.Mesh;
    Connector: THREE.Mesh;
    Cushion: THREE.Mesh;
    Cushion_exterior: THREE.Mesh;
    Cushion_sides: THREE.Mesh;
    Seprator: THREE.Mesh;
  };
  materials: {
    Plastic_2: THREE.MeshStandardMaterial;
    GlowBlue: THREE.MeshStandardMaterial;
    Cushion: THREE.MeshStandardMaterial;
    Plastic_1: THREE.MeshStandardMaterial;
    Connector: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/model.glb") as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Body_1.geometry} material={materials.Plastic_2} />
      <mesh geometry={nodes.Body_2.geometry} material={materials.GlowBlue} />
      <mesh
        geometry={nodes.Connector.geometry}
        material={materials.Plastic_2}
      />
      <mesh geometry={nodes.Cushion.geometry} material={materials.Cushion} />
      <mesh
        geometry={nodes.Cushion_exterior.geometry}
        material={materials.Plastic_2}
      />
      <mesh
        geometry={nodes.Cushion_sides.geometry}
        material={materials.Plastic_1}
      />
      <mesh geometry={nodes.Seprator.geometry} material={materials.Connector} />
    </group>
  );
}

useGLTF.preload("/model.glb");
