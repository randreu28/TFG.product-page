/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    body_1: THREE.Mesh;
    body_2: THREE.Mesh;
    connector: THREE.Mesh;
    cushion: THREE.Mesh;
    cushionExterior: THREE.Mesh;
    cushionSides: THREE.Mesh;
    separator: THREE.Mesh;
  };
  materials: {
    plastic_1: THREE.MeshStandardMaterial;
    leds: THREE.MeshStandardMaterial;
    plastic_2: THREE.MeshStandardMaterial;
    cushion: THREE.MeshStandardMaterial;
    connector: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/model.glb") as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.body_1.geometry} material={materials.plastic_1} />
      <mesh geometry={nodes.body_2.geometry} material={materials.leds} />
      <mesh
        geometry={nodes.connector.geometry}
        material={materials.plastic_2}
      />
      <mesh geometry={nodes.cushion.geometry} material={materials.cushion} />
      <mesh
        geometry={nodes.cushionExterior.geometry}
        material={materials.plastic_2}
      />
      <mesh
        geometry={nodes.cushionSides.geometry}
        material={materials.plastic_1}
      />
      <mesh
        geometry={nodes.separator.geometry}
        material={materials.connector}
      />
    </group>
  );
}

useGLTF.preload("/model.glb");
